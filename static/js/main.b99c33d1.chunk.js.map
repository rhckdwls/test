{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/Utils/ImageSlider.js","components/views/LandingPage/Sections/CheckBox.js","components/views/LandingPage/Sections/Datas.js","components/views/LandingPage/Sections/RadioBox.js","components/views/LandingPage/Sections/SearchFeature.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/Utils/FileUpload.js","components/views/UploadProductPage/UploadProductPage.js","components/views/DetailProductPage/Sections/ProductImage.js","components/views/DetailProductPage/Sections/ProductInfo.js","components/views/DetailProductPage/DetailProductPage.js","components/views/CartPage/Sections/UserCardBlock.js","components/views/CartPage/CartPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","ImageSlider","autoplay","images","map","image","i","key","style","width","maxHeight","src","Panel","Collapse","CheckBox","useState","Checked","setChecked","defaultActiveKey","header","list","value","Fragment","onChange","currentIndex","indexOf","newChecked","splice","handleFilters","handleToggle","_id","checked","name","continents","price","array","RadioBox","Value","setValue","Group","e","target","Search","Input","SearchFeature","SearchTerm","setSearchTerm","placeholder","currentTarget","refreshFunction","LandingPage","상품들","상품들설정","Skip","setSkip","Limit","PostSize","setPostSize","Filters","setFilters","getProducts","skip","limit","body","post","success","loadMore","productInfo","postSize","alert","renderCards","product","lg","md","xs","cover","href","title","description","filters","category","newFilters","priceValues","parseInt","handlePrice","showFilterResults","margin","textAlign","gutter","display","justifyContent","newSearchTerm","searchTerm","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","Item","prefix","UserOutlined","color","onBlur","LockOutlined","fontSize","border","padding","borderRadius","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","confirmPassword","oneOf","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","userData","count","status","NavBar","visible","setVisible","position","zIndex","AlignRightOutlined","placement","closable","onClose","Footer","height","flexDirection","alignItems","SmileOutlined","FileUpload","이미지","이미지변경","deleteHandler","currenIndex","newImages","onDrop","files","formData","FormData","append","filePath","getRootProps","getInputProps","EditOutlined","widthh","overflowX","index","alt","TextArea","나라들","UploadProductPage","제목","제목변경","설명","설명변경","가격","가격변경","나라","나라변경","submitHandler","writer","Axios","maxWidth","marginBottom","newImage","item","ProductImage","Images","setImages","detail","length","original","thumbnail","items","ProductInfo","sold","views","size","productId","addToCart","DetailProductPage","match","params","Product","setProduct","UserCardBlock","renderCartImage","products","quantity","CartPage","cartItems","cart","forEach","userCart","cartItem","productDetail","getCartItems","cartDetail","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8oEAiCO,SAASA,IAKd,MAAO,CACLC,KCrCqB,YDsCrBC,QANcC,IACbC,IADa,UEjCS,aFiCT,UAEbC,MAAK,SAACC,GAAD,OAAcA,EAASC,S,YG/BlB,WAAUC,EAAmBC,GAA4B,IAApBC,EAAmB,uDAAN,KAC7D,SAASC,EAAoBC,GAEzB,IAAIC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAChCG,EAAWC,cA2BjB,OAzBAC,qBAAU,WAENF,EAAShB,KAAQK,MAAK,SAAAC,GAEbA,EAASJ,QAAQiB,QAOdT,IAAeJ,EAASJ,QAAQkB,UAKjB,IAAXX,IAJJG,EAAMS,QAAQC,KAAK,KAPnBb,GACAG,EAAMS,QAAQC,KAAK,eAiBhC,IAGC,kBAACd,EAAD,iBAAuBI,EAAvB,CAA8BC,KAAMA,KAG5C,OAAOF,G,+ECpBIY,MAjBf,SAAqBX,GACnB,OACE,6BACE,kBAAC,IAAD,CAAUY,UAAQ,GACfZ,EAAMa,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAChB,yBAAKC,IAAKD,GACR,yBACEE,MAAO,CAAEC,MAAO,OAAQC,UAAW,SACnCC,IAAG,gCAA2BN,Y,kBCRpCO,EAAUC,IAAVD,MA6COE,MA3Cf,SAAkBxB,GAAQ,IAAD,EACOyB,mBAAS,IADhB,mBAChBC,EADgB,KACPC,EADO,KAgCvB,OACE,6BACE,kBAAC,IAAD,CAAUC,iBAAkB,CAAC,MAC3B,kBAACN,EAAD,CAAOO,OAAO,aAAaZ,IAAI,KAdnCjB,EAAM8B,MACN9B,EAAM8B,KAAKhB,KAAI,SAACiB,EAAOf,GAAR,OACb,kBAAC,IAAMgB,SAAP,CAAgBf,IAAKD,GACnB,kBAAC,IAAD,CACEiB,SAAU,kBAtBG,SAACF,GAEpB,IAAMG,EAAeR,EAAQS,QAAQJ,GAG/BK,EAAU,YAAOV,IAGD,IAAlBQ,EACFE,EAAW1B,KAAKqB,GAEhBK,EAAWC,OAAOH,EAAc,GAElCP,EAAWS,GACXpC,EAAMsC,cAAcF,GAQEG,CAAaR,EAAMS,MACnCC,SAAyC,IAAhCf,EAAQS,QAAQJ,EAAMS,OAEjC,8BAAOT,EAAMW,cCjCfC,EAAa,CACjB,CACEH,IAAK,EACLE,KAAM,UAER,CACEF,IAAK,EACLE,KAAM,UAER,CACEF,IAAK,EACLE,KAAM,QAER,CACEF,IAAK,EACLE,KAAM,kBAER,CACEF,IAAK,EACLE,KAAM,kBAER,CACEF,IAAK,EACLE,KAAM,aAER,CACEF,IAAK,EACLE,KAAM,eAIJE,EAAQ,CACZ,CACEJ,IAAK,EACLE,KAAM,MACNG,MAAO,IAET,CACEL,IAAK,EACLE,KAAM,aACNG,MAAO,CAAC,EAAG,MAEb,CACEL,IAAK,EACLE,KAAM,eACNG,MAAO,CAAC,IAAK,MAEf,CACEL,IAAK,EACLE,KAAM,eACNG,MAAO,CAAC,IAAK,MAEf,CACEL,IAAK,EACLE,KAAM,eACNG,MAAO,CAAC,IAAK,MAEf,CACEL,IAAK,EACLE,KAAM,iBACNG,MAAO,CAAC,IAAK,Q,SCzDTvB,EAAUC,IAAVD,MA+BOwB,MA7Bf,SAAkB9C,GAAQ,IAAD,EACGyB,mBAAS,GADZ,mBAChBsB,EADgB,KACTC,EADS,KAgBvB,OACE,6BACE,kBAAC,IAAD,CAAUpB,iBAAkB,CAAC,MAC3B,kBAAC,EAAD,CAAOC,OAAO,QAAQZ,IAAI,KACxB,kBAAC,IAAMgC,MAAP,CAAahB,SATA,SAACiB,GACpBF,EAASE,EAAEC,OAAOpB,OAClB/B,EAAMsC,cAAcY,EAAEC,OAAOpB,QAOcA,MAAOgB,GAhBlD/C,EAAM8B,MACN9B,EAAM8B,KAAKhB,KAAI,SAACiB,GAAD,OACb,kBAAC,IAAD,CAAOd,IAAKc,EAAMS,IAAKT,MAAOA,EAAMS,KACjCT,EAAMW,c,SCTPU,EAAWC,IAAXD,OAsBOE,MApBf,SAAuBtD,GAAQ,IAAD,EACQyB,mBAAS,IADjB,mBACrB8B,EADqB,KACTC,EADS,KAQ5B,OACE,6BACE,kBAACJ,EAAD,CACEK,YAAY,2BACZxB,SATgB,SAACiB,GACrBM,EAAcN,EAAEQ,cAAc3B,OAC9B/B,EAAM2D,gBAAgBT,EAAEQ,cAAc3B,QAQlCb,MAAO,CAAEC,MAAO,KAChBY,MAAOwB,MCqJAK,MA7Jf,WAAwB,IAAD,EACAnC,mBAAS,IADT,mBACdoC,EADc,KACTC,EADS,OAEGrC,mBAAS,GAFZ,mBAEdsC,EAFc,KAERC,EAFQ,OAGKvC,mBAAS,GAHd,mBAGdwC,EAHc,aAIWxC,mBAAS,IAJpB,mBAIdyC,EAJc,KAIJC,EAJI,OAKS1C,mBAAS,CACrCkB,WAAY,GACZC,MAAO,KAPY,mBAKdwB,EALc,KAKLC,EALK,OASe5C,mBAAS,IATxB,mBASF+B,GATE,WAWrBlD,qBAAU,WAKRgE,EAJW,CACTC,KAAMR,EACNS,MAAOP,MAGR,IAEH,IAAMK,EAAc,SAACG,GACnBlF,IAAMmF,KAAK,wBAAyBD,GAAMhF,MAAK,SAACC,GAC1CA,EAASC,KAAKgF,SACZF,EAAKG,SACPd,EAAM,GAAD,mBAAKD,GAAL,YAAanE,EAASC,KAAKkF,eAEhCf,EAAMpE,EAASC,KAAKkF,aAEtBV,EAAYzE,EAASC,KAAKmF,WAE1BC,MAAM,sGAiBNC,EAAcnB,EAAI/C,KAAI,SAACmE,EAASjE,GACpC,OACE,kBAAC,IAAD,CAAKkE,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAInE,IAAKD,GAC9B,kBAAC,IAAD,CACEqE,MACE,uBAAGC,KAAI,mBAAcL,EAAQzC,MAC3B,kBAAC,EAAD,CAAa3B,OAAQoE,EAAQpE,WAIjC,kBAAC,IAAD,CAAM0E,MAAON,EAAQM,MAAOC,YAAW,WAAMP,EAAQrC,cA4BvDN,EAAgB,SAACmD,EAASC,GAC9B,IAAMC,EAAU,eAAQvB,GAGxB,GAFAuB,EAAWD,GAAYD,EAEN,UAAbC,EAAsB,CACxB,IAAIE,EAjBY,SAAC7D,GACnB,IAAMpC,EAAOiD,EACTC,EAAQ,GAEZ,IAAK,IAAI5B,KAAOtB,EACVA,EAAKsB,GAAKuB,MAAQqD,SAAS9D,EAAO,MACpCc,EAAQlD,EAAKsB,GAAK4B,OAGtB,OAAOA,EAQaiD,CAAYL,GAC9BE,EAAWD,GAAYE,GA5BD,SAACH,GAOzBnB,EANW,CACTC,KAAM,EACNC,MAAOP,EACPwB,QAASA,IAIXzB,EAAQ,GAuBR+B,CAAkBJ,GAClBtB,EAAWsB,IAgBb,OACE,yBAAKzE,MAAO,CAAEC,MAAO,MAAO6E,OAAQ,cAClC,yBAAK9E,MAAO,CAAE+E,UAAW,WACvB,sDAGF,kBAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,KAChB,kBAAC,IAAD,CAAKhB,GAAI,GAAIE,GAAI,IAEf,kBAAC,EAAD,CACEtD,KAAMa,EACNL,cAAe,SAACmD,GAAD,OAAanD,EAAcmD,EAAS,kBAGvD,kBAAC,IAAD,CAAKP,GAAI,GAAIE,GAAI,IAEf,kBAAC,EAAD,CACEtD,KAAMc,EACNN,cAAe,SAACmD,GAAD,OAAanD,EAAcmD,EAAS,cAMzD,yBACEvE,MAAO,CACLiF,QAAS,OACTC,eAAgB,WAChBJ,OAAQ,cAGV,kBAAC,EAAD,CAAerC,gBA5CI,SAAC0C,GACxB,IAAI5B,EAAO,CACTF,KAAM,EACNC,MAAOP,EACPwB,QAASrB,EACTkC,WAAYD,GAGdrC,EAAQ,GACRR,EAAc6C,GACd/B,EAAYG,OAsCV,kBAAC,IAAD,CAAKyB,OAAQ,CAAC,GAAI,KAAMlB,GACxB,6BAECd,GAAYD,GACX,yBAAK/C,MAAO,CAAEiF,QAAS,OAAQC,eAAgB,WAC7C,4BAAQG,QApHQ,WACtB,IAAIhC,EAAOR,EAAOE,EAOlBK,EALW,CACTC,KAAMA,EACNC,MAAOP,EACPW,UAAU,IAGZZ,EAAQO,KA2GF,yB,8DCxJFiC,EAAUC,IAAVD,MAiLOE,mBA/Kf,SAAmB1G,GACjB,IAAMI,EAAWC,cACXsG,IAAoBC,aAAaC,QAAQ,cAFvB,EAIwBpF,mBAAS,IAJjC,mBAIjBqF,EAJiB,KAICC,EAJD,OAKYtF,mBAASkF,GALrB,mBAKjBK,EALiB,KAKLC,EALK,KAOlBC,EAAmB,WACvBD,GAAeD,IAGXG,EAAeP,aAAaC,QAAQ,cACtCD,aAAaC,QAAQ,cACrB,GAEJ,OACE,kBAAC,IAAD,CACEO,cAAe,CACbC,MAAOF,EACPG,SAAU,IAEZC,iBAAkBC,MAAaC,MAAM,CACnCJ,MAAOG,MACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,MACPG,IAAI,EAAG,0CACPD,SAAS,0BAEdE,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WACT,IAAIC,EAAe,CACjBX,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,UAGnBlH,EVzBH,SAAmB4H,GAKxB,MAAO,CACL3I,KC5BsB,aD6BtBC,QANcC,IACbmF,KADa,UEtBS,aFsBT,UACgBsD,GAC7BvI,MAAK,SAACC,GAAD,OAAcA,EAASC,SUsBdsI,CAAUD,IAChBvI,MAAK,SAACC,GACDA,EAASJ,QAAQ4I,cACnBC,OAAOvB,aAAawB,QAAQ,SAAU1I,EAASJ,QAAQ+I,SACpC,IAAfrB,EACFmB,OAAOvB,aAAawB,QAAQ,aAAcP,EAAOS,IAEjD1B,aAAa2B,WAAW,cAE1BvI,EAAMS,QAAQC,KAAK,MAEnBqG,EAAoB,+CAGvByB,OAAM,SAACC,GACN1B,EAAoB,4CACpBgB,YAAW,WACThB,EAAoB,MACnB,QAEPe,GAAc,KACb,QAGJ,SAAC9H,GAAW,IAET6H,EASE7H,EATF6H,OACAa,EAQE1I,EARF0I,QACAC,EAOE3I,EAPF2I,OAEAC,GAKE5I,EANF6I,MAME7I,EALF4I,cACAE,EAIE9I,EAJF8I,aACAC,EAGE/I,EAHF+I,WACAC,EAEEhJ,EAFFgJ,aAEEhJ,EADFiJ,YAEF,OACE,yBAAKC,UAAU,OACb,kBAAC1C,EAAD,CAAO2C,MAAO,GAAd,sBACA,0BAAMvB,SAAUoB,EAAc9H,MAAO,CAAEC,MAAO,UAC5C,kBAAC,IAAKiI,KAAN,CAAW1B,UAAQ,GACjB,kBAAC,IAAD,CACEY,GAAG,QACHe,OAAQ,kBAACC,EAAA,EAAD,CAAcpI,MAAO,CAAEqI,MAAO,qBACtC9F,YAAY,mBACZpE,KAAK,QACL0C,MAAO8F,EAAOR,MACdpF,SAAU6G,EACVU,OAAQT,EACRG,UACEP,EAAOtB,OAASqB,EAAQrB,MACpB,mBACA,eAGPsB,EAAOtB,OAASqB,EAAQrB,OACvB,yBAAK6B,UAAU,kBACb,6BACCP,EAAOtB,QAId,6BACA,kBAAC,IAAK+B,KAAN,CAAW1B,UAAQ,GACjB,kBAAC,IAAD,CACEY,GAAG,WACHe,OAAQ,kBAACI,EAAA,EAAD,CAAcvI,MAAO,CAAEqI,MAAO,qBACtC9F,YAAY,sBACZpE,KAAK,WACL0C,MAAO8F,EAAOP,SACdrF,SAAU6G,EACVU,OAAQT,EACRG,UACEP,EAAOrB,UAAYoB,EAAQpB,SACvB,mBACA,eAGPqB,EAAOrB,UAAYoB,EAAQpB,UAC1B,yBAAK4B,UAAU,kBACb,6BACCP,EAAOrB,WAKbR,GACC,+BACE,uBACE5F,MAAO,CACLqI,MAAO,YACPG,SAAU,SACVC,OAAQ,YACRC,QAAS,OACTC,aAAc,SAGf/C,IAIP,6BACA,kBAAC,IAAKsC,KAAN,KACE,kBAAC,IAAD,CACEd,GAAG,aACHrG,SAAUiF,EACVzE,QAASuE,GAHX,4BAOA,uBACEkC,UAAU,oBACV5D,KAAK,cACLpE,MAAO,CAAE4I,MAAO,UAHlB,yCAOA,6BACE,kBAAC,IAAD,CACEzK,KAAK,UACL0K,SAAS,SACTb,UAAU,oBACVhI,MAAO,CAAE8I,SAAU,QACnBC,SAAUrB,EACVhB,SAAUoB,GANZ,oCAWF,uBAAG1D,KAAK,aAAR,qC,kBCvKV4E,EAAiB,CACrBC,SAAU,CACR/E,GAAI,CAAEgF,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVlF,GAAI,CAAEgF,KAAM,IACZC,GAAI,CAAED,KAAM,MAGVG,EAAqB,CACzBD,WAAY,CACVlF,GAAI,CACFgF,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KA6LCC,MAxLf,SAAsBzK,GACpB,IAAMI,EAAWC,cACjB,OACE,kBAAC,IAAD,CACE+G,cAAe,CACbC,MAAO,GACP3E,KAAM,GACN4E,SAAU,GACVoD,gBAAiB,IAEnBnD,iBAAkBC,MAAaC,MAAM,CACnC/E,KAAM8E,MAAaE,SAAS,qDAC5BL,MAAOG,MACJH,MAAM,oBACNK,SAAS,qDACZJ,SAAUE,MACPG,IAAI,EAAG,0CACPD,SAAS,2DACZgD,gBAAiBlD,MACdmD,MAAM,CAACnD,IAAQ,YAAa,MAAO,wBACnCE,SAAS,0EAEdE,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WACT,IAAIC,EAAe,CACjBX,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,SACjB5E,KAAMmF,EAAOnF,KACb3B,MAAM,8BAAD,OAAgC6J,MAASC,OAAzC,iBAGPzK,EXpDH,SAAsB4H,GAK3B,MAAO,CACL3I,KChByB,gBDiBzBC,QANcC,IACbmF,KADa,UEXS,aFWT,aACmBsD,GAChCvI,MAAK,SAACC,GAAD,OAAcA,EAASC,SWiDdmL,CAAa9C,IAAevI,MAAK,SAACC,GACrCA,EAASJ,QAAQqF,QACnB3E,EAAMS,QAAQC,KAAK,UAEnBqE,MAAMrF,EAASJ,QAAQmJ,IAAIsC,WAI/BjD,GAAc,KACb,QAGJ,SAAC9H,GAAW,IAET6H,EASE7H,EATF6H,OACAa,EAQE1I,EARF0I,QACAC,EAOE3I,EAPF2I,OAEAC,GAKE5I,EANF6I,MAME7I,EALF4I,cACAE,EAIE9I,EAJF8I,aACAC,EAGE/I,EAHF+I,WACAC,EAEEhJ,EAFFgJ,aAEEhJ,EADFiJ,YAEF,OACE,yBAAKC,UAAU,OACb,wDACA,6BACA,kBAAC,IAAD,eACEhI,MAAO,CAAE8I,SAAU,UACfE,EAFN,CAGEtC,SAAUoB,IAEV,kBAAC,IAAKI,KAAN,CAAW1B,UAAQ,EAACsD,MAAM,gBACxB,kBAAC,IAAD,CACE1C,GAAG,OACH7E,YAAY,oDACZpE,KAAK,OACL0C,MAAO8F,EAAOnF,KACdT,SAAU6G,EACVU,OAAQT,EACRG,UACEP,EAAOjG,MAAQgG,EAAQhG,KACnB,mBACA,eAIPiG,EAAOjG,MAAQgG,EAAQhG,MACtB,yBAAKwG,UAAU,kBACb,6BACCP,EAAOjG,OAId,6BACA,kBAAC,IAAK0G,KAAN,CACE1B,UAAQ,EACRsD,MAAM,yCACNC,aAAW,EACXC,eACEvC,EAAOtB,OAASqB,EAAQrB,MAAQ,QAAU,WAG5C,kBAAC,IAAD,CACEiB,GAAG,QACH7E,YAAY,oDACZpE,KAAK,QACL0C,MAAO8F,EAAOR,MACdpF,SAAU6G,EACVU,OAAQT,EACRG,UACEP,EAAOtB,OAASqB,EAAQrB,MACpB,mBACA,eAGPsB,EAAOtB,OAASqB,EAAQrB,OACvB,yBAAK6B,UAAU,kBACb,6BACCP,EAAOtB,QAId,6BACA,kBAAC,IAAK+B,KAAN,CACE1B,UAAQ,EACRsD,MAAM,2BACNC,aAAW,EACXC,eACEvC,EAAOrB,UAAYoB,EAAQpB,SAAW,QAAU,WAGlD,kBAAC,IAAD,CACEgB,GAAG,WACH7E,YAAY,gEACZpE,KAAK,WACL0C,MAAO8F,EAAOP,SACdrF,SAAU6G,EACVU,OAAQT,EACRG,UACEP,EAAOrB,UAAYoB,EAAQpB,SACvB,mBACA,eAGPqB,EAAOrB,UAAYoB,EAAQpB,UAC1B,yBAAK4B,UAAU,kBACb,6BACCP,EAAOrB,WAId,6BACA,kBAAC,IAAK8B,KAAN,CAAW1B,UAAQ,EAACsD,MAAM,uCAASC,aAAW,GAC5C,kBAAC,IAAD,CACE3C,GAAG,kBACH7E,YAAY,uEACZpE,KAAK,WACL0C,MAAO8F,EAAO6C,gBACdzI,SAAU6G,EACVU,OAAQT,EACRG,UACEP,EAAO+B,iBAAmBhC,EAAQgC,gBAC9B,mBACA,eAGP/B,EAAO+B,iBAAmBhC,EAAQgC,iBACjC,yBAAKxB,UAAU,kBACb,6BACCP,EAAO+B,kBAId,6BACA,kBAAC,IAAKtB,KAASmB,EACb,kBAAC,IAAD,CACEhE,QAASyC,EACT3J,KAAK,UACL4K,SAAUrB,GAHZ,uB,SCtMVuC,EAAUC,IAAKD,QACfE,EAAgBD,IAAKE,UAsBZC,MApBf,SAAkBvL,GAChB,OACE,kBAAC,IAAD,CAAMwL,KAAMxL,EAAMwL,MAClB,kBAAC,IAAKpC,KAAN,CAAWnI,IAAI,QACb,uBAAGqE,KAAK,KAAR,SAEF,kBAAC6F,EAAD,CAAS5F,MAAO,wCACd,kBAAC8F,EAAD,CAAe9F,MAAM,UACnB,kBAAC,IAAK6D,KAAN,CAAWnI,IAAI,aAAf,YACA,kBAAC,IAAKmI,KAAN,CAAWnI,IAAI,aAAf,aAEF,kBAACoK,EAAD,CAAe9F,MAAM,UACnB,kBAAC,IAAK6D,KAAN,CAAWnI,IAAI,aAAf,YACA,kBAAC,IAAKmI,KAAN,CAAWnI,IAAI,aAAf,gB,UCmCOyF,oBA7Cf,SAAmB1G,GACjB,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QAY1C,OAAIA,EAAKwL,WAAaxL,EAAKwL,SAASlL,OAEhC,kBAAC,IAAD,CAAMiL,KAAMxL,EAAMwL,MAChB,kBAAC,IAAKpC,KAAN,CAAWnI,IAAI,QACb,uBAAGqE,KAAK,UAAR,WAEF,kBAAC,IAAK8D,KAAN,CAAWnI,IAAI,OACb,uBAAGqE,KAAK,aAAR,YAMJ,kBAAC,IAAD,CAAMkG,KAAMxL,EAAMwL,MAChB,kBAAC,IAAKpC,KAAN,CAAWnI,IAAI,UACb,uBAAGqE,KAAK,mBAAR,WAEF,kBAAC,IAAK8D,KAAN,CAAWnI,IAAI,QACb,kBAAC,KAAD,CAAOyK,MAAO,GACZ,uBAAGpG,KAAK,aAAa4D,UAAU,gBAC7B,0BAAMhI,MAAO,CAAEwI,SAAU,KAAzB,mBAIN,kBAAC,IAAKN,KAAN,CAAWnI,IAAI,UACb,uBAAGsF,QAnCW,WACpBhH,IAAMC,IAAN,UXXuB,aWWvB,YAAmCC,MAAK,SAACC,GACf,MAApBA,EAASiM,OACX3L,EAAMS,QAAQC,KAAK,UAEnBqE,MAAM,uBA8BJ,e,2BCUK6G,OAjDf,WAAmB,IAAD,EACcnK,oBAAS,GADvB,mBACToK,EADS,KACAC,EADA,KAWhB,OACE,yBACE5C,UAAU,OACVhI,MAAO,CAAE6K,SAAU,QAASC,OAAQ,EAAG7K,MAAO,SAE9C,yBAAK+H,UAAU,cACb,uBAAG5D,KAAK,KAAR,SAEF,yBAAK4D,UAAU,mBACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAUsC,KAAK,gBAEjB,yBAAKtC,UAAU,cACb,kBAAC,GAAD,CAAWsC,KAAK,gBAElB,kBAAC,IAAD,CACEtC,UAAU,sBACV7J,KAAK,UACLkH,QA1BW,WACjBuF,GAAW,KA2BL,kBAACG,GAAA,EAAD,OAEF,kBAAC,KAAD,CACE1G,MAAM,eACN2G,UAAU,QACVhD,UAAU,cACViD,UAAU,EACVC,QA/BQ,WACdN,GAAW,IA+BLD,QAASA,GAET,kBAAC,EAAD,CAAUL,KAAK,WACf,kBAAC,GAAD,CAAWA,KAAK,e,UC1BXa,OApBf,WACI,OACE,yBACEnL,MAAO,CACLoL,OAAQ,OACRnG,QAAS,OACToG,cAAe,SACfC,WAAY,SACZpG,eAAgB,SAChBsD,SAAU,SAGZ,2BACG,IADH,gBAEe,kBAAC+C,GAAA,EAAD,S,oBC6DRC,OAzEf,SAAoB1M,GAAQ,IAAD,EACJyB,mBAAS,IADL,mBAClBkL,EADkB,KACbC,EADa,KAmBnBC,EAAgB,SAAC9L,GACrB,IAAM+L,EAAcH,EAAIxK,QAAQpB,GAE5BgM,EAAS,YAAOJ,GACpBI,EAAU1K,OAAOyK,EAAa,GAE9BF,EAAMG,GACN/M,EAAM2D,gBAAgBoJ,IAGxB,OACE,yBAAK7L,MAAO,CAAEiF,QAAS,OAAQC,eAAgB,kBAC7C,kBAAC,KAAD,CAAU4G,OA5BM,SAACC,GACnB,IAAIC,EAAW,IAAIC,SAInBD,EAASE,OAAO,OAAQH,EAAM,IAC9B1N,IAAMmF,KAAK,qBAAsBwI,EAJlB,CACbrL,OAAQ,CAAE,eAAgB,yBAGuBpC,MAAK,SAACC,GACnDA,EAASC,KAAKgF,SAChBiI,EAAM,GAAD,mBAAKD,GAAL,CAAUjN,EAASC,KAAK0N,YAC7BrN,EAAM2D,gBAAN,sBAA0BgJ,GAA1B,CAA+BjN,EAASC,KAAK0N,aAE7CtI,MAAM,iGAkBL,gBAAGuI,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,iCACE,uCACErM,MAAO,CACLC,MAAO,IACPmL,OAAQ,IACR3C,OAAQ,sBACRxD,QAAS,OACTqG,WAAY,SACZpG,eAAgB,WAEdkH,KAEJ,0BAAWC,KACX,kBAACC,GAAA,EAAD,CAAcnO,KAAK,OAAO6B,MAAO,CAAEwI,SAAU,UAZ/C,IAY4D,kCAKlE,yBACExI,MAAO,CACLiF,QAAS,OACTsH,OAAQ,QACRnB,OAAQ,QACRoB,UAAW,WAGZf,EAAI7L,KAAI,SAAC6L,EAAKgB,GAAN,OACP,yBAAKpH,QAAS,kBAAMsG,EAAcF,IAAM1L,IAAK0M,GAC3C,yBACEzM,MAAO,CAAE8I,SAAU,QAAS7I,MAAO,QAASmL,OAAQ,SACpDjL,IAAG,gCAA2BsL,GAC9BiB,IAAI,YChEVpH,GAAUC,IAAVD,MACAqH,GAAaxK,IAAbwK,SAEFC,GAAM,CACV,CAAE7M,IAAK,EAAGc,MAAO,UACjB,CAAEd,IAAK,EAAGc,MAAO,UACjB,CAAEd,IAAK,EAAGc,MAAO,QACjB,CAAEd,IAAK,EAAGc,MAAO,iBACjB,CAAEd,IAAK,EAAGc,MAAO,iBACjB,CAAEd,IAAK,EAAGc,MAAO,aACjB,CAAEd,IAAK,EAAGc,MAAO,eAyFJgM,OAtFf,SAA2B/N,GAAQ,IAAD,EACbyB,mBAAS,IADI,mBACzBuM,EADyB,KACrBC,EADqB,OAEbxM,mBAAS,IAFI,mBAEzByM,EAFyB,KAErBC,EAFqB,OAGb1M,mBAAS,GAHI,mBAGzB2M,EAHyB,KAGrBC,EAHqB,OAIb5M,mBAAS,GAJI,mBAIzB6M,EAJyB,KAIrBC,EAJqB,OAKX9M,mBAAS,IALE,mBAKzBkL,EALyB,KAKpBC,EALoB,KAuB1B4B,EAAgB,SAACtL,GACrB,IAAK8K,IAAOE,IAAOE,IAAOE,IAAO3B,EAC/B,OAAO5H,MAAM,gFAIf,IAAMN,EAAO,CACXgK,OAAQzO,EAAMC,KAAKwL,SAASjJ,IAC5B+C,MAAOyI,EACPxI,YAAa0I,EACbtL,MAAOwL,EACPvN,OAAQ8L,EACRhK,WAAY2L,GAGdI,IAAMhK,KAAK,eAAgBD,GAAMhF,MAAK,SAACC,GACjCA,EAASC,KAAKgF,SAChBI,MAAM,gFACN/E,EAAMS,QAAQC,KAAK,MAEnBqE,MAAM,oFAKZ,OACE,yBAAK7D,MAAO,CAAEyN,SAAU,QAAS3I,OAAQ,cACvC,yBAAK9E,MAAO,CAAE+E,UAAW,SAAU2I,aAAc,SAC/C,kBAAC,GAAD,CAAOzF,MAAO,GAAd,kDAEF,kBAAC,IAAD,CAAMvB,SAAU4G,GACd,kBAAC,GAAD,CAAY7K,gBAlCE,SAACkL,GACnBjC,EAAMiC,MAkCF,6BACA,6BACA,+CACA,kBAAC,IAAD,CAAO5M,SAnDc,SAACiB,GAC1B+K,EAAK/K,EAAEQ,cAAc3B,QAkDoBA,MAAOiM,IAC5C,6BACA,6BACA,+CACA,kBAACH,GAAD,CAAU5L,SAnDiB,SAACiB,GAChCiL,EAAKjL,EAAEQ,cAAc3B,QAkD6BA,MAAOmM,IACrD,6BACA,6BACA,+CACA,kBAAC,IAAD,CAAO7O,KAAK,SAAS4C,SApDA,SAACiB,GAC1BmL,EAAKnL,EAAEQ,cAAc3B,QAmDkCA,MAAOqM,IAC1D,6BACA,6BACA,4BAAQnM,SApDiB,SAACiB,GAC9BqL,EAAKrL,EAAEQ,cAAc3B,QAmDyBA,MAAOuM,GAC9CR,GAAIhN,KAAI,SAACgO,GAAD,OACP,4BAAQ7N,IAAK6N,EAAK7N,IAAKc,MAAO+M,EAAK7N,KAChC6N,EAAK/M,WAIZ,6BACA,6BACA,kBAAC,IAAD,CAAQ1C,KAAK,SAASkH,QAASiI,GAA/B,mB,qBCrEOO,OAxBf,SAAsB/O,GAAQ,IAAD,EACCyB,mBAAS,IADV,mBACpBuN,EADoB,KACZC,EADY,KAiB3B,OAdA3O,qBAAU,WACR,GAAIN,EAAMkP,OAAOrO,QAAUb,EAAMkP,OAAOrO,OAAOsO,OAAS,EAAG,CACzD,IAAItO,EAAS,GAEbb,EAAMkP,OAAOrO,OAAOC,KAAI,SAACgO,GACvBjO,EAAOH,KAAK,CACV0O,SAAS,yBAAD,OAA2BN,GACnCO,UAAU,yBAAD,OAA2BP,QAGxCG,EAAUpO,MAEX,CAACb,EAAMkP,SAGR,6BACE,kBAAC,KAAD,CAAcI,MAAON,M,UCcZO,OA/Bf,SAAqBvP,GACnB,IAAMI,EAAWC,cAMjB,OACE,6BACE,kBAAC,KAAD,CAAckF,MAAM,gBAClB,kBAAC,KAAa6D,KAAd,CAAmB4B,MAAM,SACtBhL,EAAMkP,OAAOtM,OAEhB,kBAAC,KAAawG,KAAd,CAAmB4B,MAAM,QAAQhL,EAAMkP,OAAOM,MAC9C,kBAAC,KAAapG,KAAd,CAAmB4B,MAAM,QAAQhL,EAAMkP,OAAOO,OAC9C,kBAAC,KAAarG,KAAd,CAAmB4B,MAAM,eACtBhL,EAAMkP,OAAO1J,cAGlB,6BACA,6BACA,6BACA,yBAAKtE,MAAO,CAAEiF,QAAS,OAAQC,eAAgB,WAC7C,kBAAC,IAAD,CAAQsJ,KAAK,QAAQjI,MAAM,QAAQpI,KAAK,SAASkH,QApBlC,WACnBnG,EnB8CG,SAAmBkI,GACxB,IAAI7D,EAAO,CACTkL,UAAWrH,GAOb,MAAO,CACLjJ,KC7DuB,cD8DvBC,QANcC,IACbmF,KADa,UE3DS,aF2DT,cACoBD,GACjChF,MAAK,SAACC,GAAD,OAAcA,EAASC,SmBrDpBiQ,CAAU5P,EAAMkP,OAAO1M,QAmB5B,kBCaOqN,OAnCf,SAA2B7P,GACzB,IAAM2P,EAAY3P,EAAM8P,MAAMC,OAAOJ,UADL,EAGFlO,mBAAS,IAHP,mBAGzBuO,EAHyB,KAGhBC,EAHgB,KAchC,OATA3P,qBAAU,WACRf,IACGC,IADH,yCACyCmQ,EADzC,iBAEGlQ,MAAK,SAACC,GACLuQ,EAAWvQ,EAASC,KAAKsF,QAAQ,OAElCuD,OAAM,SAACC,GAAD,OAAS1D,MAAM0D,QACvB,IAGD,yBAAKvH,MAAO,CAAEC,MAAO,OAAQyI,QAAS,cACpC,yBAAK1I,MAAO,CAAEiF,QAAS,OAAQC,eAAgB,WAC7C,4BAAK4J,EAAQzK,QAGf,6BACA,kBAAC,IAAD,CAAKW,OAAa,IAChB,kBAAC,IAAD,CAAKhB,GAAI,GAAImF,GAAI,IAEf,kBAAC,GAAD,CAAc6E,OAAQc,KAExB,kBAAC,IAAD,CAAK9K,GAAI,GAAImF,GAAI,IAEf,kBAAC,GAAD,CAAa6E,OAAQc,Q,OCYhBE,OA3Cf,SAAuBlQ,GACrB,IAAMmQ,EAAkB,SAACtP,GACvB,GAAIA,EAAOsO,OAAS,EAAG,CACrB,IAAIpO,EAAQF,EAAO,GACnB,MAAM,yBAAN,OAAgCE,KAsBpC,OACE,6BACE,+BACE,+BACE,4BACE,6CACA,gDACA,6CACA,kDAGJ,+BA5BJf,EAAMoQ,UACNpQ,EAAMoQ,SAAStP,KAAI,SAACmE,GAAD,OACjB,4BACE,4BACE,yBACE/D,MAAO,CAAEC,MAAO,QAChByM,IAAI,UACJvM,IAAK8O,EAAgBlL,EAAQpE,WAGjC,4BAAKoE,EAAQoL,SAAb,OACA,gCAAMpL,EAAQrC,OACd,4BACE,mDCQK0N,OA7Bf,SAAkBtQ,GAChB,IAAMI,EAAWC,cAEbkQ,EAAY,GAchB,OAZAjQ,qBAAU,WAEJN,EAAMC,KAAKwL,UAAYzL,EAAMC,KAAKwL,SAAS+E,MACzCxQ,EAAMC,KAAKwL,SAAS+E,KAAKrB,OAAS,IACpCnP,EAAMC,KAAKwL,SAAS+E,KAAKC,SAAQ,SAAC3B,GAChCyB,EAAU7P,KAAKoO,EAAKxG,OAEtBlI,EtBsDD,SAAsBmQ,EAAWG,GAetC,MAAO,CACLrR,KCjF0B,iBDkF1BC,QAhBcC,IACbC,IADa,yCACyB+Q,EADzB,gBAEb9Q,MAAK,SAACC,GAAD,OAEJgR,EAASD,SAAQ,SAACE,GAMhB,OALAjR,EAASC,KAAKsF,QAAQwL,SAAQ,SAACG,EAAe5P,GACxC2P,EAASrI,KAAOsI,EAAcpO,MAChC9C,EAASC,KAAKsF,QAAQjE,GAAGqP,SAAWM,EAASN,aAG1C3Q,EAASC,YsBjEPkR,CAAaN,EAAWvQ,EAAMC,KAAKwL,SAAS+E,UAGxD,IAGD,yBAAKtP,MAAO,CAAEC,MAAO,MAAO6E,OAAQ,cAClC,uCACA,6BACE,kBAAC,GAAD,CACEoK,SAAUpQ,EAAMC,KAAK6Q,YAAc9Q,EAAMC,KAAK6Q,WAAW7L,aCkBpD8L,OA3Bf,WACE,OACE,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAAC,GAAD,MACA,yBAAK9P,MAAO,CAAE+P,WAAY,OAAQC,UAAW,uBAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,EAAK1N,EAAa,QACnD,kBAAC,IAAD,CAAOuN,OAAK,EAACC,KAAK,SAASC,UAAWC,EAAKC,GAAW,KACtD,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYC,UAAWC,EAAK7G,GAAc,KAC5D,kBAAC,IAAD,CACE0G,OAAK,EACLC,KAAK,kBACLC,UAAWC,EAAKvD,IAAmB,KAErC,kBAAC,IAAD,CACEoD,OAAK,EACLC,KAAK,sBACLC,UAAWC,EAAKzB,GAAmB,QAErC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,aAAaC,UAAWC,EAAKhB,IAAU,OAG7D,kBAAC,GAAD,QC3BckB,QACW,cAA7BrJ,OAAOsJ,SAASC,UAEe,UAA7BvJ,OAAOsJ,SAASC,UAEhBvJ,OAAOsJ,SAASC,SAAS5B,MACvB,2D,wBCXS6B,GAJKC,aAAgB,CAChC3R,KCKW,WAA+B,IAArBE,EAAoB,uDAAZ,GAAI0R,EAAQ,uCAC3C,OAAQA,EAAOxS,MACb,IzBVyB,gByBWvB,OAAO,eAAKc,EAAZ,CAAmB2R,SAAUD,EAAOvS,UACtC,IzBbsB,ayBcpB,OAAO,eAAKa,EAAZ,CAAmB4R,YAAaF,EAAOvS,UACzC,IzBbqB,YyBcnB,OAAO,eAAKa,EAAZ,CAAmBsL,SAAUoG,EAAOvS,UACtC,IzBduB,cyBerB,OAAO,eAAKa,GACd,IzBfuB,cyBgBrB,OAAO,eACFA,EADL,CAEEsL,SAAS,eACJtL,EAAMsL,SADH,CAEN+E,KAAMqB,EAAOvS,YAGnB,IzBtB0B,iByBuBxB,OAAO,eAAKa,EAAZ,CAAmB2Q,WAAYe,EAAOvS,UACxC,QACE,OAAOa,M,+BCbP6R,GAA4BC,aAAgBC,KAAmBC,KAAnCF,CAA+CG,MAEjFC,IAASC,OACL,kBAAC,IAAD,CACIC,MAAOP,GACHQ,GACArK,OAAOsK,8BACPtK,OAAOsK,iCAGX,kBAAC,KAAD,KACI,kBAAC,GAAD,QAGNC,SAASC,eAAe,SHkGxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrT,MAAK,SAAAsT,GACjCA,EAAaC,kB","file":"static/js/main.b99c33d1.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {\n  LOGIN_USER,\n  REGISTER_USER,\n  AUTH_USER,\n  LOGOUT_USER,\n  ADD_TO_CART,\n  GET_CART_ITEMS,\n} from \"./types\";\nimport { USER_SERVER } from \"../components/Config.js\";\n\nexport function registerUser(dataToSubmit) {\n  const request = axios\n    .post(`${USER_SERVER}/register`, dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: REGISTER_USER,\n    payload: request,\n  };\n}\n\nexport function loginUser(dataToSubmit) {\n  const request = axios\n    .post(`${USER_SERVER}/login`, dataToSubmit)\n    .then((response) => response.data);\n\n  return {\n    type: LOGIN_USER,\n    payload: request,\n  };\n}\n\nexport function auth() {\n  const request = axios\n    .get(`${USER_SERVER}/auth`)\n    .then((response) => response.data);\n\n  return {\n    type: AUTH_USER,\n    payload: request,\n  };\n}\n\nexport function logoutUser() {\n  const request = axios\n    .get(`${USER_SERVER}/logout`)\n    .then((response) => response.data);\n\n  return {\n    type: LOGOUT_USER,\n    payload: request,\n  };\n}\n\nexport function addToCart(id) {\n  let body = {\n    productId: id,\n  };\n\n  const request = axios\n    .post(`${USER_SERVER}/addToCart`, body)\n    .then((response) => response.data);\n\n  return {\n    type: ADD_TO_CART,\n    payload: request,\n  };\n}\n\nexport function getCartItems(cartItems, userCart) {\n  const request = axios\n    .get(`/api/product/products_by_id?id=${cartItems}&type=array`)\n    .then((response) =>\n      // CartItem들에 해당하는 정보들을 Product Collection에서 가져온후 Quantity 정보를 넣어 준다.\n      userCart.forEach((cartItem) => {\n        response.data.product.forEach((productDetail, i) => {\n          if (cartItem.id === productDetail._id) {\n            response.data.product[i].quantity = cartItem.quantity;\n          }\n        });\n        return response.data;\n      })\n    );\n\n  return {\n    type: GET_CART_ITEMS,\n    payload: request,\n  };\n}\n","export const LOGIN_USER = \"login_user\";\nexport const REGISTER_USER = \"register_user\";\nexport const AUTH_USER = \"auth_user\";\nexport const LOGOUT_USER = \"logout_user\";\nexport const ADD_TO_CART = \"add_to_cart\";\nexport const GET_CART_ITEMS = \"get_cart_items\";\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from \"react\";\r\nimport { Carousel } from \"antd\";\r\n\r\nfunction ImageSlider(props) {\r\n  return (\r\n    <div>\r\n      <Carousel autoplay>\r\n        {props.images.map((image, i) => (\r\n          <div key={i}>\r\n            <img\r\n              style={{ width: \"100%\", maxHeight: \"200px\" }}\r\n              src={`http://localhost:5000/${image}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageSlider;\r\n","import React, { useState } from \"react\";\r\nimport { Collapse, Checkbox } from \"antd\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction CheckBox(props) {\r\n  const [Checked, setChecked] = useState([]);\r\n\r\n  const handleToggle = (value) => {\r\n    // 누른 것의 Index를 구하고\r\n    const currentIndex = Checked.indexOf(value);\r\n\r\n    //전체 Checked된 State에서 현재 누른 Checked가 이미 있다면\r\n    const newChecked = [...Checked];\r\n\r\n    // State 넣어준다.\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setChecked(newChecked);\r\n    props.handleFilters(newChecked);\r\n  };\r\n\r\n  const renderCheckboxList = () =>\r\n    props.list &&\r\n    props.list.map((value, i) => (\r\n      <React.Fragment key={i}>\r\n        <Checkbox\r\n          onChange={() => handleToggle(value._id)}\r\n          checked={Checked.indexOf(value._id) === -1 ? false : true}\r\n        />\r\n        <span>{value.name}</span>\r\n      </React.Fragment>\r\n    ));\r\n\r\n  return (\r\n    <div>\r\n      <Collapse defaultActiveKey={[\"0\"]}>\r\n        <Panel header=\"Continents\" key=\"1\">\r\n          {renderCheckboxList()}\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckBox;\r\n","const continents = [\r\n  {\r\n    _id: 1,\r\n    name: \"Africa\",\r\n  },\r\n  {\r\n    _id: 2,\r\n    name: \"Europe\",\r\n  },\r\n  {\r\n    _id: 3,\r\n    name: \"Asia\",\r\n  },\r\n  {\r\n    _id: 4,\r\n    name: \"North American\",\r\n  },\r\n  {\r\n    _id: 5,\r\n    name: \"South American\",\r\n  },\r\n  {\r\n    _id: 6,\r\n    name: \"Australia\",\r\n  },\r\n  {\r\n    _id: 7,\r\n    name: \"Antarctica\",\r\n  },\r\n];\r\n\r\nconst price = [\r\n  {\r\n    _id: 0,\r\n    name: \"Any\",\r\n    array: [],\r\n  },\r\n  {\r\n    _id: 1,\r\n    name: \"$0 to $199\",\r\n    array: [0, 199],\r\n  },\r\n  {\r\n    _id: 2,\r\n    name: \"$200 to $249\",\r\n    array: [200, 249],\r\n  },\r\n  {\r\n    _id: 3,\r\n    name: \"$250 to $279\",\r\n    array: [250, 279],\r\n  },\r\n  {\r\n    _id: 4,\r\n    name: \"$280 to $299\",\r\n    array: [280, 299],\r\n  },\r\n  {\r\n    _id: 5,\r\n    name: \"More than $300\",\r\n    array: [300, 1500000],\r\n  },\r\n];\r\n\r\nexport { continents, price };\r\n","import React, { useState } from \"react\";\r\nimport { Collapse, Radio } from \"antd\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction RadioBox(props) {\r\n  const [Value, setValue] = useState(0);\r\n\r\n  const renderRadioBox = () =>\r\n    props.list &&\r\n    props.list.map((value) => (\r\n      <Radio key={value._id} value={value._id}>\r\n        {value.name}\r\n      </Radio>\r\n    ));\r\n\r\n  const handelChange = (e) => {\r\n    setValue(e.target.value);\r\n    props.handleFilters(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Collapse defaultActiveKey={[\"0\"]}>\r\n        <Panel header=\"Price\" key=\"1\">\r\n          <Radio.Group onChange={handelChange} value={Value}>\r\n            {renderRadioBox()}\r\n          </Radio.Group>\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RadioBox;\r\n","import React, { useState } from \"react\";\r\nimport { Input } from \"antd\";\r\n\r\nconst { Search } = Input;\r\n\r\nfunction SearchFeature(props) {\r\n  const [SearchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const searchHandler = (e) => {\r\n    setSearchTerm(e.currentTarget.value);\r\n    props.refreshFunction(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Search\r\n        placeholder=\"검색하기\"\r\n        onChange={searchHandler}\r\n        style={{ width: 200 }}\r\n        value={SearchTerm}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchFeature;\r\n","import React, { useEffect, useState } from \"react\";\nimport { FaCode } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { Card, Row, Col } from \"antd\";\nimport Meta from \"antd/lib/card/Meta\";\nimport ImageSlider from \"../../Utils/ImageSlider\";\nimport CheckBox from \"./Sections/CheckBox\";\nimport { continents, price } from \"./Sections/Datas\";\nimport RadioBox from \"./Sections/RadioBox\";\nimport SearchFeature from \"./Sections/SearchFeature\";\n\nfunction LandingPage() {\n  const [상품들, 상품들설정] = useState([]);\n  const [Skip, setSkip] = useState(0);\n  const [Limit, setLimit] = useState(4);\n  const [PostSize, setPostSize] = useState(0);\n  const [Filters, setFilters] = useState({\n    continents: [],\n    price: [],\n  });\n  const [SearchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    let body = {\n      skip: Skip,\n      limit: Limit,\n    };\n    getProducts(body);\n  }, []);\n\n  const getProducts = (body) => {\n    axios.post(\"/api/product/products\", body).then((response) => {\n      if (response.data.success) {\n        if (body.loadMore) {\n          상품들설정([...상품들, ...response.data.productInfo]);\n        } else {\n          상품들설정(response.data.productInfo);\n        }\n        setPostSize(response.data.postSize);\n      } else {\n        alert(\"상품들을 가져오는데 실패 했습니다.\");\n      }\n    });\n  };\n\n  const LoadMoreHandler = () => {\n    let skip = Skip + Limit;\n\n    let body = {\n      skip: skip,\n      limit: Limit,\n      loadMore: true,\n    };\n    getProducts(body);\n    setSkip(skip);\n  };\n\n  const renderCards = 상품들.map((product, i) => {\n    return (\n      <Col lg={6} md={8} xs={24} key={i}>\n        <Card\n          cover={\n            <a href={`/product/${product._id}`}>\n              <ImageSlider images={product.images} />\n            </a>\n          }\n        >\n          <Meta title={product.title} description={`$${product.price}`} />\n        </Card>\n      </Col>\n    );\n  });\n\n  const showFilterResults = (filters) => {\n    let body = {\n      skip: 0,\n      limit: Limit,\n      filters: filters,\n    };\n\n    getProducts(body);\n    setSkip(0);\n  };\n  const handlePrice = (value) => {\n    const data = price;\n    let array = [];\n\n    for (let key in data) {\n      if (data[key]._id === parseInt(value, 10)) {\n        array = data[key].array;\n      }\n    }\n    return array;\n  };\n\n  const handleFilters = (filters, category) => {\n    const newFilters = { ...Filters };\n    newFilters[category] = filters;\n\n    if (category === \"price\") {\n      let priceValues = handlePrice(filters);\n      newFilters[category] = priceValues;\n    }\n\n    showFilterResults(newFilters);\n    setFilters(newFilters);\n  };\n\n  const updateSearchTerm = (newSearchTerm) => {\n    let body = {\n      skip: 0,\n      limit: Limit,\n      filters: Filters,\n      searchTerm: newSearchTerm,\n    };\n\n    setSkip(0);\n    setSearchTerm(newSearchTerm);\n    getProducts(body);\n  };\n\n  return (\n    <div style={{ width: \"75%\", margin: \"3rem auto\" }}>\n      <div style={{ textAlign: \"center\" }}>\n        <h2>Let's Travel Anywhere</h2>\n      </div>\n      {/* {Filter} */}\n      <Row gutter={[16, 16]}>\n        <Col lg={12} xs={24}>\n          {/* {CheckBox} */}\n          <CheckBox\n            list={continents}\n            handleFilters={(filters) => handleFilters(filters, \"continents\")}\n          />\n        </Col>\n        <Col lg={12} xs={24}>\n          {/* {RadioBox} */}\n          <RadioBox\n            list={price}\n            handleFilters={(filters) => handleFilters(filters, \"price\")}\n          />\n        </Col>\n      </Row>\n\n      {/* {Search} */}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          margin: \"1rem auto\",\n        }}\n      >\n        <SearchFeature refreshFunction={updateSearchTerm} />\n      </div>\n\n      {/* {Cards} */}\n      <Row gutter={[16, 16]}>{renderCards}</Row>\n      <br />\n\n      {PostSize >= Limit && (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <button onClick={LoadMoreHandler}>더보기</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Input, Button, Checkbox, Typography } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\")\n    ? localStorage.getItem(\"rememberMe\")\n    : \"\";\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(\"Email is invalid\")\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .min(6, \"Password must be at least 6 characters\")\n          .required(\"Password is required\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then((response) => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem(\"userId\", response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem(\"rememberMe\", values.id);\n                } else {\n                  localStorage.removeItem(\"rememberMe\");\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage(\"Check out your Account or Password again\");\n              }\n            })\n            .catch((err) => {\n              setFormErrorMessage(\"Check out your Account or Password again\");\n              setTimeout(() => {\n                setFormErrorMessage(\"\");\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <Title level={2}>로그인</Title>\n            <form onSubmit={handleSubmit} style={{ width: \"350px\" }}>\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.email}\n                  </div>\n                )}\n              </Form.Item>\n              <br />\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.password}\n                  </div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label>\n                  <p\n                    style={{\n                      color: \"#ff0000bf\",\n                      fontSize: \"0.7rem\",\n                      border: \"1px solid\",\n                      padding: \"1rem\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    {formErrorMessage}\n                  </p>\n                </label>\n              )}\n              <br />\n              <Form.Item>\n                <Checkbox\n                  id=\"rememberMe\"\n                  onChange={handleRememberMe}\n                  checked={rememberMe}\n                >\n                  기억하기\n                </Checkbox>\n                <a\n                  className=\"login-form-forgot\"\n                  href=\"/reset_user\"\n                  style={{ float: \"right\" }}\n                >\n                  비밀번호 찾기\n                </a>\n                <div>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ minWidth: \"100%\" }}\n                    disabled={isSubmitting}\n                    onSubmit={handleSubmit}\n                  >\n                    로그인 하기\n                  </Button>\n                </div>\n                <a href=\"/register\">회원가입</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default withRouter(LoginPage);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Input, Button } from \"antd\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        name: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required(\"이름을 입력하세요\"),\n        email: Yup.string()\n          .email(\"Email is invalid\")\n          .required(\"이메일 입력하세요\"),\n        password: Yup.string()\n          .min(6, \"Password must be at least 6 characters\")\n          .required(\"비밀번호 입력하세요\"),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n          .required(\"비밀번호 다시 입력하세요\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\n          };\n\n          dispatch(registerUser(dataToSubmit)).then((response) => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg);\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>회원가입</h2>\n            <br />\n            <Form\n              style={{ minWidth: \"375px\" }}\n              {...formItemLayout}\n              onSubmit={handleSubmit}\n            >\n              <Form.Item required label=\"이름\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"이름을 입력하세요\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.name}\n                  </div>\n                )}\n              </Form.Item>\n              <br />\n              <Form.Item\n                required\n                label=\"아이디(이메일)\"\n                hasFeedback\n                validateStatus={\n                  errors.email && touched.email ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"email\"\n                  placeholder=\"이메일 입력하세요\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.email}\n                  </div>\n                )}\n              </Form.Item>\n              <br />\n              <Form.Item\n                required\n                label=\"비밀번호\"\n                hasFeedback\n                validateStatus={\n                  errors.password && touched.password ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"password\"\n                  placeholder=\"비밀번호를 입력하세요\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.password}\n                  </div>\n                )}\n              </Form.Item>\n              <br />\n              <Form.Item required label=\"비밀번호확인\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"비밀번호 다시 입력하세요\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">\n                    <br />\n                    {errors.confirmPassword}\n                  </div>\n                )}\n              </Form.Item>\n              <br />\n              <Form.Item {...tailFormItemLayout}>\n                <Button\n                  onClick={handleSubmit}\n                  type=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  완료\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default RegisterPage;\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <SubMenu title={<span>Blogs</span>}>\n      <MenuItemGroup title=\"Item 1\">\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"Item 2\">\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n      </MenuItemGroup>\n    </SubMenu>\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Menu, Badge } from \"antd\";\nimport axios from \"axios\";\nimport { USER_SERVER } from \"../../../Config\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector((state) => state.user);\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert(\"Log Out Failed\");\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    );\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"upload\">\n          <a href=\"/product/upload\">Upload</a>\n        </Menu.Item>\n        <Menu.Item key=\"cart\">\n          <Badge count={5}>\n            <a href=\"/user/cart\" className=\"head=example\">\n              <span style={{ fontSize: 20 }}>🛒</span>\n            </a>\n          </Badge>\n        </Menu.Item>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default withRouter(RightMenu);\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button } from 'antd';\nimport { AlignRightOutlined } from \"@ant-design/icons\";\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav\n      className=\"menu\"\n      style={{ position: \"fixed\", zIndex: 5, width: \"100%\" }}\n    >\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <AlignRightOutlined />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar","import React from 'react'\nimport { SmileOutlined } from \"@ant-design/icons\";\n\nfunction Footer() {\n    return (\n      <div\n        style={{\n          height: \"80px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontSize: \"1rem\",\n        }}\n      >\n        <p>\n          {\" \"}\n          Happy Coding <SmileOutlined />\n        </p>\n      </div>\n    );\n}\n\nexport default Footer\n","import React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction FileUpload(props) {\r\n  const [이미지, 이미지변경] = useState([]);\r\n\r\n  const dropHandler = (files) => {\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/fomr-data\" },\r\n    };\r\n    formData.append(\"file\", files[0]);\r\n    axios.post(\"/api/product/image\", formData, config).then((response) => {\r\n      if (response.data.success) {\r\n        이미지변경([...이미지, response.data.filePath]);\r\n        props.refreshFunction([...이미지, response.data.filePath]);\r\n      } else {\r\n        alert(\"파일을 저장하는데 실패했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteHandler = (image) => {\r\n    const currenIndex = 이미지.indexOf(image);\r\n\r\n    let newImages = [...이미지];\r\n    newImages.splice(currenIndex, 1);\r\n\r\n    이미지변경(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <Dropzone onDrop={dropHandler}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section>\r\n            <div\r\n              style={{\r\n                width: 300,\r\n                height: 240,\r\n                border: \"1px solid lightgray\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              {...getRootProps()}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <EditOutlined type=\"plus\" style={{ fontSize: \"3rem\" }} /> <br />\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          widthh: \"350px\",\r\n          height: \"240px\",\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {이미지.map((이미지, index) => (\r\n          <div onClick={() => deleteHandler(이미지)} key={index}>\r\n            <img\r\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n              src={`http://localhost:5000/${이미지}`}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Button, Form, Input } from \"antd\";\r\nimport FileUpload from \"../../Utils/FileUpload\";\r\nimport Axios from \"axios\";\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst 나라들 = [\r\n  { key: 1, value: \"Africa\" },\r\n  { key: 2, value: \"Europe\" },\r\n  { key: 3, value: \"Asia\" },\r\n  { key: 4, value: \"North America\" },\r\n  { key: 5, value: \"South America\" },\r\n  { key: 6, value: \"Australia\" },\r\n  { key: 7, value: \"Antarctica\" },\r\n];\r\n\r\nfunction UploadProductPage(props) {\r\n  const [제목, 제목변경] = useState(\"\");\r\n  const [설명, 설명변경] = useState(\"\");\r\n  const [가격, 가격변경] = useState(0);\r\n  const [나라, 나라변경] = useState(1);\r\n  const [이미지, 이미지변경] = useState([]);\r\n\r\n  const titleChangeHandler = (e) => {\r\n    제목변경(e.currentTarget.value);\r\n  };\r\n\r\n  const descriptionChangeHandler = (e) => {\r\n    설명변경(e.currentTarget.value);\r\n  };\r\n  const priceChangeHandler = (e) => {\r\n    가격변경(e.currentTarget.value);\r\n  };\r\n  const continentChangeHandler = (e) => {\r\n    나라변경(e.currentTarget.value);\r\n  };\r\n  const updateImage = (newImage) => {\r\n    이미지변경(newImage);\r\n  };\r\n  const submitHandler = (e) => {\r\n    if (!제목 || !설명 || !가격 || !나라 || !이미지) {\r\n      return alert(\"모든 값을 넣어주셔야 합니다.\");\r\n    }\r\n\r\n    //서버에 채운 값들을 request로 보낸다.\r\n    const body = {\r\n      writer: props.user.userData._id,\r\n      title: 제목,\r\n      description: 설명,\r\n      price: 가격,\r\n      images: 이미지,\r\n      continents: 나라,\r\n    };\r\n\r\n    Axios.post(\"/api/product\", body).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"상품 업로드에 성공 했습니다.\");\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"상품 업로드에 실패 했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n      <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n        <Title level={2}> 여행 상품 업로드</Title>\r\n      </div>\r\n      <Form onSubmit={submitHandler}>\r\n        <FileUpload refreshFunction={updateImage} />\r\n        <br />\r\n        <br />\r\n        <label>이름</label>\r\n        <Input onChange={titleChangeHandler} value={제목} />\r\n        <br />\r\n        <br />\r\n        <label>설명</label>\r\n        <TextArea onChange={descriptionChangeHandler} value={설명} />\r\n        <br />\r\n        <br />\r\n        <label>가격</label>\r\n        <Input type=\"number\" onChange={priceChangeHandler} value={가격} />\r\n        <br />\r\n        <br />\r\n        <select onChange={continentChangeHandler} value={나라}>\r\n          {나라들.map((item) => (\r\n            <option key={item.key} value={item.key}>\r\n              {item.value}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br />\r\n        <br />\r\n        <Button type=\"submit\" onClick={submitHandler}>\r\n          확인\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadProductPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ImageGallery from \"react-image-gallery\";\r\n\r\nfunction ProductImage(props) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.detail.images && props.detail.images.length > 0) {\r\n      let images = [];\r\n\r\n      props.detail.images.map((item) => {\r\n        images.push({\r\n          original: `http://localhost:5000/${item}`,\r\n          thumbnail: `http://localhost:5000/${item}`,\r\n        });\r\n      });\r\n      setImages(images);\r\n    }\r\n  }, [props.detail]);\r\n\r\n  return (\r\n    <div>\r\n      <ImageGallery items={Images} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductImage;\r\n","import React from \"react\";\r\nimport { Button, Descriptions } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToCart } from \"../../../../_actions/user_actions\";\r\n\r\nfunction ProductInfo(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const clickHandler = () => {\r\n    dispatch(addToCart(props.detail._id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Descriptions title=\"Product Info\">\r\n        <Descriptions.Item label=\"Price\">\r\n          {props.detail.price}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Sold\">{props.detail.sold}</Descriptions.Item>\r\n        <Descriptions.Item label=\"View\">{props.detail.views}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Description\">\r\n          {props.detail.description}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Button size=\"large\" shape=\"round\" type=\"danger\" onClick={clickHandler}>\r\n          Add to Cart\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProductImage from \"./Sections/ProductImage\";\r\nimport ProductInfo from \"./Sections/ProductInfo\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nfunction DetailProductPage(props) {\r\n  const productId = props.match.params.productId;\r\n\r\n  const [Product, setProduct] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n      .then((response) => {\r\n        setProduct(response.data.product[0]);\r\n      })\r\n      .catch((err) => alert(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", padding: \"3rem 4rem\" }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <h1>{Product.title}</h1>\r\n      </div>\r\n\r\n      <br />\r\n      <Row gutter={(16, 16)}>\r\n        <Col lg={12} sm={24}>\r\n          {/* ProductImage */}\r\n          <ProductImage detail={Product} />\r\n        </Col>\r\n        <Col lg={12} sm={24}>\r\n          {/* ProductImfo */}\r\n          <ProductInfo detail={Product} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailProductPage;\r\n","import React from \"react\";\r\nimport \"./UserCardBlock.css\";\r\n\r\nfunction UserCardBlock(props) {\r\n  const renderCartImage = (images) => {\r\n    if (images.length > 0) {\r\n      let image = images[0];\r\n      return `http://localhost:5000/${image}`;\r\n    }\r\n  };\r\n\r\n  const renderItems = () =>\r\n    props.products &&\r\n    props.products.map((product) => (\r\n      <tr>\r\n        <td>\r\n          <img\r\n            style={{ width: \"70px\" }}\r\n            alt=\"product\"\r\n            src={renderCartImage(product.images)}\r\n          />\r\n        </td>\r\n        <td>{product.quantity} EA</td>\r\n        <td>${product.price}</td>\r\n        <td>\r\n          <button>Remove</button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Product Image</th>\r\n            <th>Product Quantity</th>\r\n            <th>Product Price</th>\r\n            <th>Remove from Cart</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderItems()}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserCardBlock;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCartItems } from \"../../../_actions/user_actions\";\r\nimport UserCardBlock from \"./Sections/UserCardBlock\";\r\nfunction CartPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  let cartItems = [];\r\n\r\n  useEffect(() => {\r\n    //리덕스 User state안에 cart 안에 상품이 들어있는지 확인\r\n    if (props.user.userData && props.user.userData.cart) {\r\n      if (props.user.userData.cart.length > 0) {\r\n        props.user.userData.cart.forEach((item) => {\r\n          cartItems.push(item.id);\r\n        });\r\n        dispatch(getCartItems(cartItems, props.user.userData.cart));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\r\n      <h1>My Cart</h1>\r\n      <div>\r\n        <UserCardBlock\r\n          products={props.user.cartDetail && props.user.cartDetail.product}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartPage;\r\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport UploadProductPage from \"./views/UploadProductPage/UploadProductPage\";\nimport DetailProductPage from \"./views/DetailProductPage/DetailProductPage\";\nimport CartPage from \"./views/CartPage/CartPage\";\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <NavBar />\n      <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route\n            exact\n            path=\"/product/upload\"\n            component={Auth(UploadProductPage, true)}\n          />\n          <Route\n            exact\n            path=\"/product/:productId\"\n            component={Auth(DetailProductPage, null)}\n          />\n          <Route exact path=\"/user/cart\" component={Auth(CartPage, true)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n  LOGIN_USER,\n  REGISTER_USER,\n  AUTH_USER,\n  LOGOUT_USER,\n  ADD_TO_CART,\n  GET_CART_ITEMS,\n} from \"../_actions/types\";\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case REGISTER_USER:\n      return { ...state, register: action.payload };\n    case LOGIN_USER:\n      return { ...state, loginSucces: action.payload };\n    case AUTH_USER:\n      return { ...state, userData: action.payload };\n    case LOGOUT_USER:\n      return { ...state };\n    case ADD_TO_CART:\n      return {\n        ...state,\n        userData: {\n          ...state.userData,\n          cart: action.payload,\n        },\n      };\n    case GET_CART_ITEMS:\n      return { ...state, cartDetail: action.payload };\n    default:\n      return state;\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}